package main

import (
	"github.com/transactrx/ncpdpBaseParser/pkg/ncpdpparser"
	"log"
	"testing"
)

func TestCreateNcpdpObject(t *testing.T) {

	//compunds
	request := "016904D0B195964     1011215561527     20221011          \u001E\u001CAM04\u001CC2322099064           \u001CCCJOHN     \u001CCDDOEOT       \u001CC90\u001CC1               \u001CC61\u001E\u001CAM01\u001CC419700124\u001CC52\u001CCAJANE     \u001CCBDOE       \u001CCM220 LEDOUX DR                 \u001CCNEUNICE              \u001CCOLA\u001CCP70535          \u001D\u001E\u001CAM07\u001CEM1\u001CD2000000175696\u001CE103\u001CD738779230305        \u001CE70000010000\u001CD300\u001CD5003\u001CD62\u001CD80\u001CDE20221011\u001CDF05\u001CDJ2\u001CET0000010000\u001CC800\u001CDT0\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000157B\u001CDC0000125{\u001CHA0000001{\u001CGE0000014A\u001CHE005000{\u001CJE03\u001CDQ0000282B\u001CDU0000297C\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1417930843     \u001CDRHEAD           \u001C2NLA\u001E\u001CAM10\u001CEF03\u001CEG3\u001CEC04\u001CRE03\u001CTE51552014704        \u001CED0000000250\u001CEE0000051I\u001CUE01\u001CRE03\u001CTE38779190305        \u001CED0000001000\u001CEE0000004A\u001CUE01\u001CRE03\u001CTE38779230105        \u001CED0000002400\u001CEE0000047C\u001CUE01\u001CRE03\u001CTE38779230305        \u001CED0000006600\u001CEE0000053I\u001CUE01"
	//request := "61009751B19999      1011669688842     20111013          \u001E\u001CAM01\u001CCX01\u001CCY1045\u001CC419310202\u001CC52\u001CCAJANE\u001CCBDOE\u001E\u001CAM04\u001CC20055168301\u001CCCJOHN\u001CCDDOEH\u001CC90\u001CC1PDPIND\u001CC3001\u001CC61\u001D\u001E\u001CAM07\u001CEM1\u001CD20723583\u001CE103\u001CD700006496300\u001CE70000001000\u001CD30\u001CD530\u001CD61\u001CD80\u001CDE20111013\u001CDJ3\u001CDK00\u001CC81\u001CDT0\u001E\u001CAM03\u001CEZ01\u001CDB1457347619\u001CDRLEINDECKER\u001E\u001CAM11\u001CD91850{\u001CDC30{\u001CE3200{\u001CDQ2050{\u001CDU2080{\u001CDN07\u001E\u001CAM08\u001C7E1\u001CE5MA\u001C8E11"
	//request = "018844D0B13F        1011346571106     20230706          \u001e\u001cAM04\u001cC2MJWB2707584         \u001cC1FCMJDWB        \u001cC301 \u001cC61\u001e\u001cAM01\u001cC419840907\u001cC52\u001cCAJANE    \u001cCBDOE          \u001cCM709 MELROSE                   \u001cCNJONESBORO           \u001cCOAR\u001cCP72401          \u001d\u001e\u001cAM07\u001cEM1\u001cD2000000733630\u001cE103\u001cD700002145780        \u001cE70000002000\u001cD304\u001cD5028\u001cD61\u001cD80\u001cDE20230227\u001cDF05\u001cDJ3\u001cET0000002000\u001cC802\u001cEU00\u001cEV00000000000\u001cU701\u001e\u001cAM11\u001cD90014731H\u001cDC0000110{\u001cDX0005000{\u001cDQ0014841H\u001cDU0014841H\u001cDN01\u001e\u001cAM03\u001cEZ01\u001cDB1326245291     \u001cDRMCGRATH        \u001e\u001cAM05\u001c4C1\u001c5C01\u001c6C03\u001c7C004336    \u001cE820230706\u001cHB1\u001cHC07\u001cDV0005997G\u001cNR01\u001cNP06\u001cNQ000005000{\u0003\u0003"
	//dur
	request = "004336D0B1MEDDADV   1011962927855     20230614D012000113\u001E\u001CAM04\u001CC2G0196772401         \u001CC90\u001CC1RXCVSD         \u001CC3   \u001CC61\u001E\u001CAM01\u001CC419810531\u001CC52\u001CCAJANE     \u001CCBDOE       \u001CCM814 DUNCANS CHAPEL RD NW      \u001CCNWILLIS              \u001CCOVA\u001CCP24380          \u001CC701\u001C2C1\u001C4X00\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000160849\u001CE103\u001CD757237004805        \u001CE70000090000\u001CD303\u001CD5030\u001CD61\u001CD80\u001CDE20221018\u001CDF11\u001CDJ3\u001CET0000090000\u001CC800\u001CDT3\u001CU701\u001E\u001CAM11\u001CD90003470G\u001CDC0000099I\u001CDX0000000{\u001CDQ0003570F\u001CDU0003570F\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1699720169     \u001CDRZHANG          \u001C2NVA\u001E\u001CAM08\u001C7E1\u001CE4DD\u001CE5M0\u001CE61G\u001C8E00\u001C7E2\u001CE4TD\u001CE5M0\u001CE61G\u001C8E00\u001C7E3\u001CE4DD\u001CE5M0\u001CE61G\u001C8E00\u001C7E4\u001CE4DD\u001CE5M0\u001CE61G\u001C8E00\u001E\u001CAM13\u001CVE1\u001CWE02\u001CDOG40.909        "
	//compound
	request = "021684D0B1DATAUNVAIL4011669742144     20230705          \u001E\u001CAM04\u001CC2ZCC36516227001      \u001CCCJOHN      \u001CCDDOE         \u001CC1CHC            \u001CC3   \u001CC61\u001E\u001CAM01\u001CCX99\u001CCYZCC36516227001      \u001CC420030306\u001CC52\u001CCAJANE      \u001CCBDOE         \u001CCM2209 DANIEL ISLAND DR         \u001CCNCHARLESTON          \u001CCOSC\u001CCP29492          \u001CC701\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328839\u001CE100\u001CD70                  \u001CE70000004000\u001CD300\u001CD5002\u001CD62\u001CD80\u001CDE20230705\u001CDF01\u001CDJ2\u001CNX1\u001CDK08\u001CET0000004000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000089A\u001CDC0000100{\u001CDX0000000{\u001CDQ0000182G\u001CDU0000189A\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001E\u001CAM08\u001C7E1\u001CE4AD\u001CE500\u001CE600\u001C8E11\u001CJ9  \u001CH6                   \u001E\u001CAM10\u001CEF17\u001CEG1\u001CEC02\u001CRE03\u001CTE51552032304        \u001CED0000000022\u001CEE0000013{\u001CUE01\u001CRE03\u001CTE38779028908        \u001CED0000008647\u001CEE0000076A\u001CUE01\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328838\u001CE103\u001CD700121075908        \u001CE70000080000\u001CD300\u001CD5005\u001CD61\u001CD80\u001CDE20230705\u001CDF00\u001CDJ2\u001CET0000080000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000324G\u001CDC0000100{\u001CDX0000000{\u001CDQ0000424G\u001CDU0000424G\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328840\u001CE100\u001CD70                  \u001CE70000200000\u001CD300\u001CD5005\u001CD62\u001CD80\u001CDE20230705\u001CDF01\u001CDJ2\u001CNX1\u001CDK08\u001CET0000200000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000788E\u001CDC0000100{\u001CDX0000000{\u001CDQ0000832B\u001CDU0000888E\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001E\u001CAM08\u001C7E1\u001CE4AD\u001CE500\u001CE600\u001C8E13\u001CJ9  \u001CH6                   \u001E\u001CAM10\u001CEF12\u001CEG3\u001CEC03\u001CRE03\u001CTE00395103196        \u001CED0000017440\u001CEE0000012A\u001CUE01\u001CRE03\u001CTE00395009416        \u001CED0000218000\u001CEE0000129D\u001CUE01\u001CRE03\u001CTE51552037807        \u001CED0000017440\u001CEE0000647{\u001CUE01\u001C2G02\u001C2HXX\u001C2HXY\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328841\u001CE103\u001CD757237007630        \u001CE70000010000\u001CD300\u001CD5004\u001CD61\u001CD80\u001CDE20230705\u001CDF00\u001CDJ2\u001CET0000010000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90005113A\u001CDC0000100{\u001CDX0000000{\u001CDQ0005213A\u001CDU0005213A\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          "
	//compound messed up
	request = "021684D0B1DATAUNVAIL4011669742144     20230705          \u001E\u001CAM04\u001CC2ZCC36516227001      \u001CCCJOHN      \u001CCDDOE         \u001CC1CHC            \u001CC3   \u001CC61\u001E\u001CAM01\u001CCX99\u001CCYZCC36516227001      \u001CC420030306\u001CC52\u001CCAJANE      \u001CCBDOE         \u001CCM2209 DANIEL ISLAND DR         \u001CCNCHARLESTON          \u001CCOSC\u001CCP29492          \u001CC701\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328839\u001CE100\u001CD70                  \u001CE70000004000\u001CD300\u001CD5002\u001CD62\u001CD80\u001CDE20230705\u001CDF01\u001CDJ2\u001CNX1\u001CDK08\u001CET0000004000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000089A\u001CDC0000100{\u001CDX0000000{\u001CDQ0000182G\u001CDU0000189A\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001E\u001CAM08\u001C7E1\u001CE4AD\u001CE500\u001CE600\u001C8E11\u001CJ9  \u001CH6                   \u001E\u001CAM10\u001CEF17\u001CEG1\u001CEC02\u001CRE03\u001CTE51552032304        \u001CED0000000022\u001CEE0000013{\u001CUE01\u001CRE03\u001CTE38779028908        \u001CED0000008647\u001CEE0000076A\u001CUE01\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328838\u001CE103\u001CD700121075908        \u001CE70000080000\u001CD300\u001CD5005\u001CD61\u001CD80\u001CDE20230705\u001CDF00\u001CDJ2\u001CET0000080000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000324G\u001CDC0000100{\u001CDX0000000{\u001CDQ0000424G\u001CDU0000424G\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328840\u001CE100\u001CD70                  \u001CE70000200000\u001CD300\u001CD5005\u001CD62\u001CD80\u001CDE20230705\u001CDF01\u001CDJ2\u001CNX1\u001CDK08\u001CET0000200000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90000788E\u001CDC0000100{\u001CDX0000000{\u001CDQ0000832B\u001CDU0000888E\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          \u001E\u001CAM08\u001C7E1\u001CE4AD\u001CE500\u001CE600\u001C8E13\u001CJ9  \u001CH6                   \u001E\u001CAM10\u001CEF12\u001CEG3\u001CEC03\u001CTE00395103196        \u001CED0000017440\u001CEE0000012A\u001CUE01\u001CRE03\u001CTE00395009416        \u001CED0000218000\u001CEE0000129D\u001CUE01\u001CRE03\u001CTE51552037807        \u001CED0000017440\u001CEE0000647{\u001CUE01\u001C2G02\u001C2HXX\u001C2HXY\u001D\u001E\u001CAM07\u001CEM1\u001CD2000000328841\u001CE103\u001CD757237007630        \u001CE70000010000\u001CD300\u001CD5004\u001CD61\u001CD80\u001CDE20230705\u001CDF00\u001CDJ2\u001CET0000010000\u001CC800\u001CEU00\u001CEV00000000000\u001CU701\u001E\u001CAM11\u001CD90005113A\u001CDC0000100{\u001CDX0000000{\u001CDQ0005213A\u001CDU0005213A\u001CDN01\u001E\u001CAM03\u001CEZ01\u001CDB1932106747     \u001CDRSCOTT          "
	ncpdp, err := ncpdpparser.New(request)
	if err != nil {
		t.Fatalf("Error parsing NCPDP request: %v", err)
	}
	ef := ncpdp.GetFieldValueAsString(3, "07", "D2")
	log.Printf("EF: %v", ef)
	gr := ncpdp.GetFieldValueAsGroup(3, "10", "EC")
	
	log.Printf("GR: %v", gr)

	if ncpdp == nil {
		t.Fatalf("NCPDP object is nil")
	}

	//if ncpdp.GetFieldValue(0, "01", 0, "CA") == "" {
	//	t.Errorf("Unable to find field value for 01-CA. Expected Patient First Name")
	//}
	//
	//if ncpdp.GetFieldValue(0, "01", 0, "CB") == "" {
	//	t.Errorf("Unable to find field value for 01-CB. Expected Patient Last Name")
	//}

}
